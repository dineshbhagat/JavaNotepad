/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.dkb;

import com.google.common.cache.Cache;
import com.google.common.cache.CacheBuilder;
import com.google.common.collect.Lists;

import java.util.UUID;
import java.util.concurrent.TimeUnit;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.slf4j.MDC;

public class App {


    private static Logger logger = LoggerFactory.getLogger(App.class);
    
    public static void main(String[] args) throws Exception {
        
        // You can dynamically change info/debug levels,
        logger.debug("This is debug message");
        logger.info("This is info message");
        
        long start1 = System.nanoTime();
        CacheBuilder<Object, Object> cacheBuilder = CacheBuilder.newBuilder();

        cacheBuilder.maximumSize(10);
        cacheBuilder.expireAfterWrite(5, TimeUnit.MILLISECONDS);
        cacheBuilder.recordStats();
//                .build(
//                        new CacheLoader<String, String>() {
//                            @Override
//                            public String load(String key) throws Exception {
//                                return "method";
//                            }
//                        });
        Cache<String, String> cache = cacheBuilder.build();
        System.out.println((System.nanoTime() - start1) / 1000000 + " ms");
        long start = System.nanoTime();
        for (int i = 0; i < 20; i++) {
            cache.put(UUID.randomUUID().toString(), "hello");
        }
        System.out.println((System.nanoTime() - start) / 1000000 + " ms");
        //System.out.println(cache.get("hello"));
        System.out.println(cache.stats());
        System.out.println(cache.asMap());
        Thread.sleep(6);
        System.out.println(cache.asMap());
        System.out.println(Lists.newArrayList(cache.stats()));
    }
}
